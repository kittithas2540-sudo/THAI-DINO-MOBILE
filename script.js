// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πÇ‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå‡πÑ‡∏ó‡∏¢ 6 ‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå
const dinos = [
  {nameTH:"‡∏†‡∏π‡πÄ‡∏ß‡∏µ‡∏¢‡∏á‡πÇ‡∏Å‡∏ã‡∏≠‡∏£‡∏±‡∏™ ‡∏™‡∏¥‡∏£‡∏¥‡∏ô‡∏ò‡∏£‡πÄ‡∏ô", img:"images/phuwiangosaurus.png", info:"‡∏ã‡∏≠‡πÇ‡∏£‡∏û‡∏≠‡∏î‡∏Ñ‡∏≠‡∏¢‡∏≤‡∏ß ‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡∏ä ‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô"},
  {nameTH:"‡∏™‡∏¢‡∏≤‡∏°‡πÇ‡∏°‡∏ã‡∏≠‡∏£‡∏±‡∏™ ‡∏™‡∏∏‡∏ò‡∏µ‡∏ò‡∏£‡∏ô‡∏¥", img:"images/siamosaurus.png", info:"‡∏™‡πÑ‡∏õ‡πÇ‡∏ô‡∏ã‡∏≠‡∏£‡∏≠‡∏¢‡∏î‡πå‡∏Å‡∏¥‡∏ô‡∏õ‡∏•‡∏≤ ‡∏û‡∏ö‡πÉ‡∏ô‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô"},
  {nameTH:"‡∏™‡∏¢‡∏≤‡∏°‡πÇ‡∏°‡πÑ‡∏ó‡∏£‡∏±‡∏ô‡∏ô‡∏±‡∏™ ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô‡πÄ‡∏≠‡∏ô‡∏ã‡∏¥‡∏™", img:"images/siamotyrannus.png", info:"‡πÄ‡∏ó‡∏≠‡πÇ‡∏£‡πÇ‡∏û‡∏î‡∏ô‡∏±‡∏Å‡∏•‡πà‡∏≤ ‡∏û‡∏ö‡πÉ‡∏ô‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô"},
  {nameTH:"‡∏ã‡∏¥‡∏ï‡∏ï‡∏∞‡πÇ‡∏Å‡∏ã‡∏≠‡∏£‡∏±‡∏™ ‡∏™‡∏±‡∏ï‡∏¢‡∏≤‡∏£‡∏±‡∏Å‡∏©‡πå‡∏Å‡∏¥", img:"images/psittacosaurus.png", info:"‡πÑ‡∏î‡πÇ‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏Å‡∏¥‡∏ô‡∏û‡∏∑‡∏ä‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å ‡∏°‡∏µ‡∏Å‡∏∞‡πÇ‡∏´‡∏•‡∏Å‡∏£‡∏π‡∏õ‡∏ô‡∏Å‡πÅ‡∏Å‡πâ‡∏ß"},
  {nameTH:"‡∏≠‡∏µ‡∏™‡∏≤‡∏ô‡πÇ‡∏ô‡∏ã‡∏≠‡∏£‡∏±‡∏™ ‡∏≠‡∏£‡∏£‡∏ñ‡∏ß‡∏¥‡∏†‡∏±‡∏ä‡∏ô‡πå‡∏ä‡∏¥", img:"images/isanosaurus.png", info:"‡∏ã‡∏≠‡πÇ‡∏£‡∏û‡∏≠‡∏î‡∏¢‡∏∏‡∏Ñ‡πÅ‡∏£‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ô‡πÑ‡∏ó‡∏¢"},
  {nameTH:"‡∏Å‡∏¥‡∏ô‡∏£‡∏µ‡∏°‡∏¥‡∏°‡∏±‡∏™ ‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô‡πÄ‡∏≠‡∏ô‡∏ã‡∏¥‡∏™", img:"images/kinnareemimus.png", info:"‡πÑ‡∏î‡πÇ‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏ô‡∏Å‡∏Å‡∏£‡∏∞‡∏à‡∏≠‡∏Å‡πÄ‡∏ó‡∏® ‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß"},
];

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î (12 ‡πÉ‡∏ö)
const deck = dinos.flatMap((d,i)=>[{id:i+"A",...d},{id:i+"B",...d}]);

// ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á DOM
const grid=document.getElementById("grid");
const timeEl=document.getElementById("time");
const pairsEl=document.getElementById("pairs");
const flipsEl=document.getElementById("flips");
const popup=document.getElementById("popup");
const popupTitle=document.getElementById("popup-title");
const popupText=document.getElementById("popup-text");
const popupImg=document.getElementById("popup-img");
const btnClose=document.getElementById("btnClose");
const btnRestart=document.getElementById("btnRestart");

// ‡πÄ‡∏™‡∏µ‡∏¢‡∏á
const sfxFlip=document.getElementById("sfxFlip");
const sfxMatch=document.getElementById("sfxMatch");
const sfxMiss=document.getElementById("sfxMiss");
const sfxWin=document.getElementById("sfxWin");

// ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏Å‡∏°
let state={};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°
function shuffle(a){
  const arr=[...a];
  for(let i=arr.length-1;i>0;i--){
    const j=Math.floor(Math.random()*(i+1));
    [arr[i],arr[j]]=[arr[j],arr[i]];
  }
  return arr;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
function formatTime(ms){
  const s=Math.floor(ms/1000);
  const mm=String(Math.floor(s/60)).padStart(2,"0");
  const ss=String(s%60).padStart(2,"0");
  return `${mm}:${ss}`;
}
function startTimer(){
  if(state.timer) return; // ‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ã‡πâ‡∏≠‡∏ô
  state.startAt=Date.now() - (state.elapsed||0);
  state.timer=setInterval(()=>{
    state.elapsed = Date.now()-state.startAt;
    timeEl.textContent=formatTime(state.elapsed);
  },200);
}
function stopTimer(){
  clearInterval(state.timer);
  state.timer=null;
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î
function render(){
  grid.innerHTML="";
  state.shuffled.forEach(card=>{
    const el=document.createElement("div");
    el.className="card";
    el.dataset.key=card.id;

    const inner=document.createElement("div");
    inner.className="card-inner";

    const back=document.createElement("div");
    back.className="face back";
    back.textContent="ü¶ñ"; // ‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î

    const front=document.createElement("div");
    front.className="face front";
    const thumb=document.createElement("div");
    thumb.className="thumb";
    const img=document.createElement("img");
    img.src=card.img; img.alt=card.nameTH;
    thumb.appendChild(img);
    const cap=document.createElement("div");
    cap.className="caption";
    cap.textContent=card.nameTH;
    front.appendChild(thumb);
    front.appendChild(cap);

    inner.appendChild(back);
    inner.appendChild(front);
    el.appendChild(inner);

    el.addEventListener("click",()=>onFlip(el,card));
    grid.appendChild(el);
  });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
function onFlip(el,card){
  if(state.locked) return;
  if(el.classList.contains("flipped")) return;
  el.classList.add("flipped");
  sfxFlip.currentTime=0; sfxFlip.play();
  state.flips++; flipsEl.textContent=state.flips;

  state.flipped.push({el,card});
  if(state.flipped.length===2){
    state.locked=true;
    const [A,B]=state.flipped;
    if(A.card.nameTH===B.card.nameTH){
      // ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏ñ‡∏π‡∏Å
      sfxMatch.currentTime=0; sfxMatch.play();
      A.el.classList.add("matched");
      B.el.classList.add("matched");
      state.pairs++;
      pairsEl.textContent=`${state.pairs}/6`;
      showPopup(A.card);
      state.flipped=[];
      state.locked=false;
      if(state.pairs===6){
        stopTimer();
        setTimeout(()=>{ sfxWin.play(); alert("‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏°‡∏≤‡∏Å! ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß üéâ"); },500);
      }
    }else{
      // ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏ú‡∏¥‡∏î
      sfxMiss.currentTime=0; sfxMiss.play();
      setTimeout(()=>{
        A.el.classList.remove("flipped");
        B.el.classList.remove("flipped");
        state.flipped=[];
        state.locked=false;
      },800);
    }
  }
}

// ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û
function showPopup(card){
  popupTitle.textContent=card.nameTH;
  popupText.textContent=card.info;
  popupImg.src=card.img;
  popupImg.alt=card.nameTH;
  popup.classList.add("active");
  stopTimer(); // ‚úÖ ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡πâ‡∏á
}
btnClose.addEventListener("click",()=>{
  popup.classList.remove("active");
  startTimer(); // ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
function restart(){
  stopTimer();
  state={
    shuffled:shuffle(deck),
    flipped:[],
    locked:false,
    pairs:0,
    flips:0,
    startAt:null,
    timer:null,
    elapsed:0
  };
  timeEl.textContent="00:00";
  pairsEl.textContent="0/6";
  flipsEl.textContent="0";
  render();
  startTimer();
}
btnRestart.addEventListener("click",restart);

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
restart();